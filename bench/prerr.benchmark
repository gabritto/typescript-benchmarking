{
  "version": "2",
  "date": "2024-01-23T02:13:12.343Z",
  "system": {
    "platform": "linux",
    "release": "5.15.133.1-microsoft-standard-WSL2",
    "arch": "x64",
    "totalmem": 33632350208,
    "freemem": 32523931648,
    "hostname": "CPC-gabri-8SHBT",
    "username": "gabrielaa",
    "cpus": [
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      }
    ]
  },
  "predictable": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/typescript.git",
    "branch": "gabritto/d2-detect",
    "commit": "c73638300f2e4621cb0538fd1123f8a2fdf9e5ab",
    "date": "2024-01-17T20:54:19.000Z",
    "subject": "fix optional param detection under exact optional property types"
  },
  "iterations": 10,
  "scenarios": [
    {
      "name": "condperf",
      "kind": "tsc",
      "args": [
        "-p",
        "${suiteDirectory}/condperf/tsconfig.json"
      ]
    }
  ],
  "hosts": [
    {
      "name": "node",
      "arch": "x64",
      "platform": "linux",
      "version": "v20.11.0",
      "executable": "/home/gabrielaa/.volta/tools/image/node/20.11.0/bin/node",
      "default": false,
      "current": true
    }
  ],
  "measurements": [
    {
      "name": "condperf - node (v20.11.0, x64)",
      "scenarioName": "condperf",
      "scenarioArgs": 0,
      "hostName": "node (v20.11.0, x64)",
      "hostIndex": 0,
      "host": {
        "name": "node",
        "version": "v20.11.0",
        "arch": "x64"
      },
      "parseTime": {
        "metric": "Parse Time",
        "samples": [
          0.91,
          0.91,
          0.91,
          0.91,
          0.92,
          0.91,
          0.91,
          0.92,
          0.91,
          0.92
        ],
        "mean": 0.913,
        "minimum": 0.91,
        "maximum": 0.92,
        "marginOfError": 0.0034033262161205402,
        "variance": 0.000023333333333333373,
        "standardDeviation": 0.004830458915396484,
        "relativeMarginOfError": 0.003727630028609573,
        "unit": "s",
        "precision": 2
      },
      "bindTime": {
        "metric": "Bind Time",
        "samples": [
          0.42,
          0.41,
          0.42,
          0.41,
          0.42,
          0.42,
          0.42,
          0.41,
          0.42,
          0.41
        ],
        "mean": 0.41600000000000004,
        "minimum": 0.41,
        "maximum": 0.42,
        "marginOfError": 0.0036383087646139505,
        "variance": 0.000026666666666666714,
        "standardDeviation": 0.005163977794943227,
        "relativeMarginOfError": 0.008745934530321995,
        "unit": "s",
        "precision": 2
      },
      "checkTime": {
        "metric": "Check Time",
        "samples": [
          0.36,
          0.36,
          0.36,
          0.36,
          0.37,
          0.37,
          0.36,
          0.36,
          0.37,
          0.36
        ],
        "mean": 0.363,
        "minimum": 0.36,
        "maximum": 0.37,
        "marginOfError": 0.0034033262161205402,
        "variance": 0.00002333333333333337,
        "standardDeviation": 0.004830458915396484,
        "relativeMarginOfError": 0.009375554314381654,
        "unit": "s",
        "precision": 2
      },
      "emitTime": {
        "metric": "Emit Time",
        "samples": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        "mean": 0,
        "minimum": 0,
        "maximum": 0,
        "marginOfError": 0,
        "variance": 0,
        "standardDeviation": 0,
        "relativeMarginOfError": null,
        "unit": "s",
        "precision": 2
      },
      "totalTime": {
        "metric": "Total Time",
        "samples": [
          1.69,
          1.69,
          1.69,
          1.69,
          1.71,
          1.7,
          1.7,
          1.69,
          1.69,
          1.69
        ],
        "mean": 1.6939999999999997,
        "minimum": 1.69,
        "maximum": 1.71,
        "marginOfError": 0.004926293355274559,
        "variance": 0.00004888888888888898,
        "standardDeviation": 0.006992058987801017,
        "relativeMarginOfError": 0.002908083444672113,
        "unit": "s",
        "precision": 2
      },
      "memoryUsed": {
        "metric": "Memory used",
        "samples": [
          88985,
          88985,
          88985,
          88985,
          88985,
          88985,
          88985,
          88985,
          88985,
          88985
        ],
        "mean": 88985,
        "minimum": 88985,
        "maximum": 88985,
        "marginOfError": 0,
        "variance": 0,
        "standardDeviation": 0,
        "relativeMarginOfError": 0,
        "unit": "k",
        "precision": 0
      }
    }
  ]
}