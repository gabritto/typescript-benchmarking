{
  "version": "2",
  "date": "2024-01-26T05:43:10.012Z",
  "system": {
    "platform": "linux",
    "release": "5.15.133.1-microsoft-standard-WSL2",
    "arch": "x64",
    "totalmem": 33632350208,
    "freemem": 32505397248,
    "hostname": "CPC-gabri-8SHBT",
    "username": "gabrielaa",
    "cpus": [
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      },
      {
        "model": "AMD EPYC 7763 64-Core Processor",
        "speed": 0
      }
    ]
  },
  "predictable": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/typescript.git",
    "branch": "gabritto/d2-detect",
    "commit": "1f45a76a5e89ef2dcef45583463d4bb582d94e5a",
    "date": "2024-01-26T05:29:09.000Z",
    "subject": "Merge remote-tracking branch 'origin/gabritto/d2-detect' into gabritto/d2-detect"
  },
  "iterations": 10,
  "scenarios": [
    {
      "name": "condperf",
      "kind": "tsc",
      "args": [
        "-p",
        "${suiteDirectory}/condperf/tsconfig.json"
      ]
    }
  ],
  "hosts": [
    {
      "name": "node",
      "arch": "x64",
      "platform": "linux",
      "version": "v20.11.0",
      "executable": "/home/gabrielaa/.volta/tools/image/node/20.11.0/bin/node",
      "default": false,
      "current": true
    }
  ],
  "measurements": [
    {
      "name": "condperf - node (v20.11.0, x64)",
      "scenarioName": "condperf",
      "scenarioArgs": 0,
      "hostName": "node (v20.11.0, x64)",
      "hostIndex": 0,
      "host": {
        "name": "node",
        "version": "v20.11.0",
        "arch": "x64"
      },
      "parseTime": {
        "metric": "Parse Time",
        "samples": [
          0.93,
          0.91,
          0.91,
          0.91,
          0.91,
          0.91,
          0.91,
          0.9,
          0.91,
          0.9
        ],
        "mean": 0.9100000000000001,
        "minimum": 0.9,
        "maximum": 0.93,
        "marginOfError": 0.005752671263566755,
        "variance": 0.00006666666666666679,
        "standardDeviation": 0.008164965809277268,
        "relativeMarginOfError": 0.006321616773150279,
        "unit": "s",
        "precision": 2
      },
      "bindTime": {
        "metric": "Bind Time",
        "samples": [
          0.42,
          0.42,
          0.42,
          0.42,
          0.42,
          0.41,
          0.42,
          0.42,
          0.42,
          0.42
        ],
        "mean": 0.41900000000000004,
        "minimum": 0.41,
        "maximum": 0.42,
        "marginOfError": 0.002228000000000002,
        "variance": 0.000010000000000000018,
        "standardDeviation": 0.003162277660168382,
        "relativeMarginOfError": 0.005317422434367547,
        "unit": "s",
        "precision": 2
      },
      "checkTime": {
        "metric": "Check Time",
        "samples": [
          0.39,
          0.39,
          0.39,
          0.39,
          0.39,
          0.39,
          0.39,
          0.39,
          0.39,
          0.39
        ],
        "mean": 0.39000000000000007,
        "minimum": 0.39,
        "maximum": 0.39,
        "marginOfError": 4.122628164774748e-17,
        "variance": 3.4238754566884194e-33,
        "standardDeviation": 5.851389114294502e-17,
        "relativeMarginOfError": 1.0570841448140378e-16,
        "unit": "s",
        "precision": 2
      },
      "emitTime": {
        "metric": "Emit Time",
        "samples": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        "mean": 0,
        "minimum": 0,
        "maximum": 0,
        "marginOfError": 0,
        "variance": 0,
        "standardDeviation": 0,
        "relativeMarginOfError": null,
        "unit": "s",
        "precision": 2
      },
      "totalTime": {
        "metric": "Total Time",
        "samples": [
          1.74,
          1.72,
          1.73,
          1.73,
          1.72,
          1.71,
          1.72,
          1.72,
          1.72,
          1.72
        ],
        "mean": 1.7230000000000003,
        "minimum": 1.71,
        "maximum": 1.74,
        "marginOfError": 0.005800412092640016,
        "variance": 0.00006777777777777792,
        "standardDeviation": 0.008232726023485655,
        "relativeMarginOfError": 0.0033664608779106295,
        "unit": "s",
        "precision": 2
      },
      "memoryUsed": {
        "metric": "Memory used",
        "samples": [
          89321,
          89321,
          89321,
          89321,
          89321,
          89321,
          89321,
          89321,
          89321,
          89321
        ],
        "mean": 89321,
        "minimum": 89321,
        "maximum": 89321,
        "marginOfError": 0,
        "variance": 0,
        "standardDeviation": 0,
        "relativeMarginOfError": 0,
        "unit": "k",
        "precision": 0
      }
    }
  ]
}